KIDS Distribution saved on Feb 03, 2016@22:11:10
The Daily Plan Utils
**KIDS**:TDP 1.0^

**INSTALL NAME**
TDP 1.0
"BLD",9424,0)
TDP 1.0^^0^3160203^y
"BLD",9424,4,0)
^9.64PA^^
"BLD",9424,6.3)
1
"BLD",9424,"KRN",0)
^9.67PA^779.2^20
"BLD",9424,"KRN",.4,0)
.4
"BLD",9424,"KRN",.401,0)
.401
"BLD",9424,"KRN",.402,0)
.402
"BLD",9424,"KRN",.403,0)
.403
"BLD",9424,"KRN",.5,0)
.5
"BLD",9424,"KRN",.84,0)
.84
"BLD",9424,"KRN",3.6,0)
3.6
"BLD",9424,"KRN",3.8,0)
3.8
"BLD",9424,"KRN",9.2,0)
9.2
"BLD",9424,"KRN",9.8,0)
9.8
"BLD",9424,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",9424,"KRN",9.8,"NM",1,0)
ZZTDP^^0^B122844355
"BLD",9424,"KRN",9.8,"NM","B","ZZTDP",1)

"BLD",9424,"KRN",19,0)
19
"BLD",9424,"KRN",19.1,0)
19.1
"BLD",9424,"KRN",101,0)
101
"BLD",9424,"KRN",409.61,0)
409.61
"BLD",9424,"KRN",771,0)
771
"BLD",9424,"KRN",779.2,0)
779.2
"BLD",9424,"KRN",870,0)
870
"BLD",9424,"KRN",8989.51,0)
8989.51
"BLD",9424,"KRN",8989.52,0)
8989.52
"BLD",9424,"KRN",8994,0)
8994
"BLD",9424,"KRN","B",.4,.4)

"BLD",9424,"KRN","B",.401,.401)

"BLD",9424,"KRN","B",.402,.402)

"BLD",9424,"KRN","B",.403,.403)

"BLD",9424,"KRN","B",.5,.5)

"BLD",9424,"KRN","B",.84,.84)

"BLD",9424,"KRN","B",3.6,3.6)

"BLD",9424,"KRN","B",3.8,3.8)

"BLD",9424,"KRN","B",9.2,9.2)

"BLD",9424,"KRN","B",9.8,9.8)

"BLD",9424,"KRN","B",19,19)

"BLD",9424,"KRN","B",19.1,19.1)

"BLD",9424,"KRN","B",101,101)

"BLD",9424,"KRN","B",409.61,409.61)

"BLD",9424,"KRN","B",771,771)

"BLD",9424,"KRN","B",779.2,779.2)

"BLD",9424,"KRN","B",870,870)

"BLD",9424,"KRN","B",8989.51,8989.51)

"BLD",9424,"KRN","B",8989.52,8989.52)

"BLD",9424,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","ZZTDP")
0^1^B122844355
"RTN","ZZTDP",1,0)
ZZTDP ; AU PWC - THE DAILY PLAN UTILS ; 02/03/2016
"RTN","ZZTDP",2,0)
 ;;1.0;THE DAILY PLAN;;Feb 02, 2016;Build 1
"RTN","ZZTDP",3,0)
 Q
"RTN","ZZTDP",4,0)
 ; RPCEXECUTE is copied from RAPTOR project
"RTN","ZZTDP",5,0)
RPCEXEC(TMP,DT) ;
"RTN","ZZTDP",6,0)
 ; Execute an RPC based on paramaters provided in TMP reference global
"RTN","ZZTDP",7,0)
 ;
"RTN","ZZTDP",8,0)
 ; Input parameter
"RTN","ZZTDP",9,0)
 ; ================
"RTN","ZZTDP",10,0)
 ;
"RTN","ZZTDP",11,0)
 ; TMP is a reference to a global with nodes. e.g.,  ^TMP($J)
"RTN","ZZTDP",12,0)
 ;
"RTN","ZZTDP",13,0)
 ;   ,"name")      NAME (#8994, .01)
"RTN","ZZTDP",14,0)
 ;   ,"version")   VERSION (#8994, .09)
"RTN","ZZTDP",15,0)
 ;   ,"use") = L|R
"RTN","ZZTDP",16,0)
 ;   ,"input",n,"type")   PARAMETER TYPE (#8994.02, #02)
"RTN","ZZTDP",17,0)
 ;   ,"input",n,"value")  input parameter value
"RTN","ZZTDP",18,0)
 ;      e.g.
"RTN","ZZTDP",19,0)
 ;      ,"input",n,"type")="LITERAL"
"RTN","ZZTDP",20,0)
 ;      ,"input",n,"value")="abc"
"RTN","ZZTDP",21,0)
 ;
"RTN","ZZTDP",22,0)
 ;      ,"input",n,"type")="REFERENCE"
"RTN","ZZTDP",23,0)
 ;      ,"input",n,"value")="^ABC"
"RTN","ZZTDP",24,0)
 ;
"RTN","ZZTDP",25,0)
 ;      ,"input",n,"type")="LIST"
"RTN","ZZTDP",26,0)
 ;      ,"input",n,"value",m1)="list1"
"RTN","ZZTDP",27,0)
 ;      ,"input",n,"value",m2,k1)="list21"
"RTN","ZZTDP",28,0)
 ;      ,"input",n,"value",m2,k2)="list22"
"RTN","ZZTDP",29,0)
 ;         
"RTN","ZZTDP",30,0)
 ;          where m1, m2, k1, k2 are numbers or strings
"RTN","ZZTDP",31,0)
 ;     
"RTN","ZZTDP",32,0)
 ; Output value
"RTN","ZZTDP",33,0)
 ; ==============
"RTN","ZZTDP",34,0)
 ; The RPC output is in  @TMP@("result")
"RTN","ZZTDP",35,0)
 ;  e.g., ,"result","type")="SINGLE VALUE"
"RTN","ZZTDP",36,0)
 ;                  "value")="Hello World!"
"RTN","ZZTDP",37,0)
 ;                
"RTN","ZZTDP",38,0)
 ; Return {"success": result, "message" : message }
"RTN","ZZTDP",39,0)
 ;    result 1 - success
"RTN","ZZTDP",40,0)
 ;           0 - error
"RTN","ZZTDP",41,0)
 ;
"RTN","ZZTDP",42,0)
 N RPC,PRPC,TARGS,TCNT,TI,TOUT,TRESULT,X
"RTN","ZZTDP",43,0)
 N XWBAPVER,DUZ,DT
"RTN","ZZTDP",44,0)
 ;
"RTN","ZZTDP",45,0)
 S U=$G(U,"^")  ; set default to "^"
"RTN","ZZTDP",46,0)
 ;
"RTN","ZZTDP",47,0)
 S PRPC("name")=$G(@TMP@("name"))
"RTN","ZZTDP",48,0)
 S:PRPC("name")["ORWDX SEND" ^TMP($J,"input",5,"value")=""
"RTN","ZZTDP",49,0)
 Q:PRPC("name")="" $$ERROR(-1,"RPC name is missing")
"RTN","ZZTDP",50,0)
 ;
"RTN","ZZTDP",51,0)
 S RPC("ien")=$O(^XWB(8994,"B",PRPC("name"),""))
"RTN","ZZTDP",52,0)
 Q:'RPC("ien") $$ERROR(-2,"Undefined RPC ["_PRPC("name")_"]")
"RTN","ZZTDP",53,0)
 ;
"RTN","ZZTDP",54,0)
 S XWBAPVER=$G(@TMP@("version"))
"RTN","ZZTDP",55,0)
 S PRPC("use")=$G(@TMP@("use"))
"RTN","ZZTDP",56,0)
 S PRPC("context")=$G(@TMP@("context"))
"RTN","ZZTDP",57,0)
 S PRPC("duz")=$G(@TMP@("duz"))
"RTN","ZZTDP",58,0)
 S PRPC("division")=$G(@TMP@("division"))
"RTN","ZZTDP",59,0)
 ; Set DUZ
"RTN","ZZTDP",60,0)
 S DUZ=PRPC("duz")
"RTN","ZZTDP",61,0)
 S:'$D(DUZ(2)) DUZ(2)=PRPC("division")
"RTN","ZZTDP",62,0)
 S:DUZ DUZ(0)=$P(^VA(200,DUZ,0),U,4)
"RTN","ZZTDP",63,0)
 S DT=$G(@TMP@("dt"))
"RTN","ZZTDP",64,0)
 ;
"RTN","ZZTDP",65,0)
 S X=$G(^XWB(8994,RPC("ien"),0)) ;e.g., XWB EGCHO STRING^ECHO1^XWBZ1^1^R
"RTN","ZZTDP",66,0)
 S RPC("routineTag")=$P(X,"^",2)
"RTN","ZZTDP",67,0)
 S RPC("routineName")=$P(X,"^",3)
"RTN","ZZTDP",68,0)
 Q:RPC("routineName") $$ERROR(-4,"Undefined routine name for RPC ["_PRPC("name")_"]")
"RTN","ZZTDP",69,0)
 ;
"RTN","ZZTDP",70,0)
 ; 1=SINGLE VALUE; 2=ARRAY; 3=WORD PROCESSING; 4=GLOBAL ARRAY; 5=GLOBAL INSTANCE
"RTN","ZZTDP",71,0)
 S RPC("resultType")=$P(X,"^",4)
"RTN","ZZTDP",72,0)
 S RPC("resultWrapOn")=$P(X,"^",8)
"RTN","ZZTDP",73,0)
 ;
"RTN","ZZTDP",74,0)
 ; is the RPC available
"RTN","ZZTDP",75,0)
 D CKRPC^XWBLIB(.TOUT,PRPC("name"),PRPC("use"),XWBAPVER)
"RTN","ZZTDP",76,0)
 Q:'TOUT $$ERROR(-3,"RPC ["_PRPC("name")_"] cannot be run at this time.")
"RTN","ZZTDP",77,0)
 ;
"RTN","ZZTDP",78,0)
 ; ADD THE FOLLOWING AT SOME POINT
"RTN","ZZTDP",79,0)
 ;S X=$$CHKPRMIT(PRPC("name"),PRPC("duz"),PRPC("context"))
"RTN","ZZTDP",80,0)
 ;Q:X'="" $$ERROR(-4,"RPC ["_PRPC("name")_"] is not allowed to be run: "_X)
"RTN","ZZTDP",81,0)
 ;
"RTN","ZZTDP",82,0)
 S X=$$BUILDARG(.TARGS,RPC("ien"),TMP)  ; build RPC arguments list - tArgs
"RTN","ZZTDP",83,0)
 Q:X<0 $$ERROR($P(X,U),$P(X,U,2)) ; error building arguments list
"RTN","ZZTDP",84,0)
 ;
"RTN","ZZTDP",85,0)
 ; now, prepare the arguments for the final call
"RTN","ZZTDP",86,0)
 ; it is outside of the $$buildArgumets so we can newed the individual parameters
"RTN","ZZTDP",87,0)
 S (TI,TCNT)=""
"RTN","ZZTDP",88,0)
 F  S TI=$O(TARGS(TI)) Q:TI=""  F  S TCNT=$O(TARGS(TI,TCNT)) Q:TCNT=""  N @("tA"_TI) X TARGS(TI,TCNT)  ; set/merge actions
"RTN","ZZTDP",89,0)
 ;
"RTN","ZZTDP",90,0)
 S X="D "_RPC("routineTag")_"^"_RPC("routineName")_"(.TRESULT"_$S(TARGS="":"",1:","_TARGS)_")"
"RTN","ZZTDP",91,0)
 S DIC(0)="" ; JAM 2014/9/5 - some obscure problem with LAYGO^XUA4A7
"RTN","ZZTDP",92,0)
 X X  ; execute the routine
"RTN","ZZTDP",93,0)
 M @TMP@("result","value")=TRESULT
"RTN","ZZTDP",94,0)
 S @TMP@("result","type")=$$EXTERNAL^DILFD(8994,.04,,RPC("resultType"))
"RTN","ZZTDP",95,0)
 S TRASH=$$SUCCESS()
"RTN","ZZTDP",96,0)
 Q "OK"
"RTN","ZZTDP",97,0)
 ;
"RTN","ZZTDP",98,0)
 ;
"RTN","ZZTDP",99,0)
ISINPREQ(PIEN,PSEQIEN) ; is input RPC parameter is required
"RTN","ZZTDP",100,0)
 ; PIEN - RPC IEN in file #8994
"RTN","ZZTDP",101,0)
 ; PSEQIEN - Input parameter IEN in multiple file #8994.02
"RTN","ZZTDP",102,0)
 ;
"RTN","ZZTDP",103,0)
 Q $P(^XWB(8994,PIEN,2,PSEQIEN,0),U,4)=1
"RTN","ZZTDP",104,0)
 ;
"RTN","ZZTDP",105,0)
BUILDARG(OUT,PIEN,TMP) ;Build RPC argument list
"RTN","ZZTDP",106,0)
 ;
"RTN","ZZTDP",107,0)
 ; Return values
"RTN","ZZTDP",108,0)
 ; =============
"RTN","ZZTDP",109,0)
 ; Success 1
"RTN","ZZTDP",110,0)
 ; Error   -n^error message
"RTN","ZZTDP",111,0)
 ;
"RTN","ZZTDP",112,0)
 ; OUT array with arguments
"RTN","ZZTDP",113,0)
 N TCNT,TERROR,TIEN,TI,TII,TREQUIRED,TPARAM,TINDEXSEQ,X,COUNT
"RTN","ZZTDP",114,0)
 ;
"RTN","ZZTDP",115,0)
 S TI=0
"RTN","ZZTDP",116,0)
 S TII=""
"RTN","ZZTDP",117,0)
 S TCNT=0
"RTN","ZZTDP",118,0)
 ;
"RTN","ZZTDP",119,0)
 K OUT
"RTN","ZZTDP",120,0)
 S OUT=""
"RTN","ZZTDP",121,0)
 S TERROR=0
"RTN","ZZTDP",122,0)
 S TINDEXSEQ=$D(^XWB(8994,PIEN,2,"PARAMSEQ"))  ; is the cross-reference defined
"RTN","ZZTDP",123,0)
 S TPARAM=$S(TINDEXSEQ:"^XWB(8994,PIEN,2,""PARAMSEQ"")",1:"^XWB(8994,PIEN,2)")
"RTN","ZZTDP",124,0)
 ;
"RTN","ZZTDP",125,0)
 S COUNT=0
"RTN","ZZTDP",126,0)
 F  S TII=$O(@TMP@("input",TII)) Q:('TII)!(TERROR)  D
"RTN","ZZTDP",127,0)
 . S COUNT=COUNT+1
"RTN","ZZTDP",128,0)
 . S TIEN=TII  ; get the IEN of the input parameter
"RTN","ZZTDP",129,0)
 . I '$D(@TMP@("input",TII,"value")) S OUT=OUT_"," Q
"RTN","ZZTDP",130,0)
 . I $D(@TMP@("input",TII,"value"))=1 D  Q
"RTN","ZZTDP",131,0)
 . . S OUT=OUT_"tA"_TII_","   ; add the argument
"RTN","ZZTDP",132,0)
 . . I $$UP^XLFSTR($G(@TMP@("input",TII,"type")))="REFERENCE" D
"RTN","ZZTDP",133,0)
 . . . S TCNT=TCNT+1,OUT(TII,TCNT)="S tA"_TII_"=@@TMP@(""input"","_TII_",""value"")"  ; set it
"RTN","ZZTDP",134,0)
 . . . Q
"RTN","ZZTDP",135,0)
 . . E  S TCNT=TCNT+1,OUT(TII,TCNT)="S tA"_TII_"=@TMP@(""input"","_TII_",""value"")"  ; set it as action for later
"RTN","ZZTDP",136,0)
 . . Q
"RTN","ZZTDP",137,0)
 . ; list/array
"RTN","ZZTDP",138,0)
 . S OUT=OUT_".tA"_TII_","
"RTN","ZZTDP",139,0)
 . S TCNT=TCNT+1,OUT(TII,TCNT)="M tA"_TII_"=@TMP@(""input"","_TII_",""value"")"  ; merge it
"RTN","ZZTDP",140,0)
 . Q
"RTN","ZZTDP",141,0)
 ;
"RTN","ZZTDP",142,0)
 Q:TERROR TERROR
"RTN","ZZTDP",143,0)
 S OUT=$E(OUT,1,$L(OUT)-1)
"RTN","ZZTDP",144,0)
 Q 1
"RTN","ZZTDP",145,0)
 ;
"RTN","ZZTDP",146,0)
FORMAT(CODE,MESSAGE) ; return JSON formatted result
"RTN","ZZTDP",147,0)
 S ^TMP($J,"RPCEXECUTE","result")=CODE_U_MESSAGE
"RTN","ZZTDP",148,0)
 Q "OK"
"RTN","ZZTDP",149,0)
 ;Q "{""success"": "_CODE_", ""MESSAGE"": """_$S($TR(MESSAGE," ","")="":"",1:MESSAGE)_"""}"
"RTN","ZZTDP",150,0)
 ;
"RTN","ZZTDP",151,0)
ERROR(CODE,MESSAGE) ;
"RTN","ZZTDP",152,0)
 Q $$FORMAT(0,CODE_" "_MESSAGE)
"RTN","ZZTDP",153,0)
 ;
"RTN","ZZTDP",154,0)
SUCCESS(CODE,MESSAGE) ;
"RTN","ZZTDP",155,0)
 Q $$FORMAT(1,$G(CODE)_" "_$G(MESSAGE))
"RTN","ZZTDP",156,0)
 ;
"RTN","ZZTDP",157,0)
 ; Is RPC pertmited to run in a context?
"RTN","ZZTDP",158,0)
CHKPRMIT(PRPCNAME,PUSER,PCONTEXT) ;checks to see if remote procedure is permited to run
"RTN","ZZTDP",159,0)
 ;Input:  PRPCNAME - Remote procedure to check
"RTN","ZZTDP",160,0)
 ;        PUSER    - User
"RTN","ZZTDP",161,0)
 ;        PCONTEXT - RPC Context
"RTN","ZZTDP",162,0)
 Q:$$KCHK^XUSRB("XUPROGMODE",PUSER) ""  ; User has programmer key
"RTN","ZZTDP",163,0)
 N RESULT,X
"RTN","ZZTDP",164,0)
 N XQMES
"RTN","ZZTDP",165,0)
 S U=$G(U,"^")
"RTN","ZZTDP",166,0)
 S RESULT="" ;Return XWBSEC="" if OK to run RPC
"RTN","ZZTDP",167,0)
 ;
"RTN","ZZTDP",168,0)
 ;In the beginning, when no DUZ is defined and no context exist,
"RTN","ZZTDP",169,0)
 ;setup default signon context
"RTN","ZZTDP",170,0)
 S:'$G(PUSER) PUSER=0,PCONTEXT="XUS SIGNON"   ;set up default context
"RTN","ZZTDP",171,0)
 ;
"RTN","ZZTDP",172,0)
 ;These RPC's are allowed in any context, so we can just quit
"RTN","ZZTDP",173,0)
 S X="^XWB IM HERE^XWB CREATE CONTEXT^XWB RPC LIST^XWB IS RPC AVAILABLE^XUS GET USER INFO^XUS GET TOKEN^XUS SET VISITOR^"
"RTN","ZZTDP",174,0)
 S X=X_"XUS KAAJEE GET USER INFO^XUS KAAJEE LOGOUT^"  ; VistALink RPC's that are always allowed.
"RTN","ZZTDP",175,0)
 I X[(U_PRPCNAME_U) Q RESULT
"RTN","ZZTDP",176,0)
 ;
"RTN","ZZTDP",177,0)
 ;
"RTN","ZZTDP",178,0)
 ;If in Signon context, only allow XUS and XWB rpc's
"RTN","ZZTDP",179,0)
 I $G(PCONTEXT)="XUS SIGNON","^XUS^XWB^"'[(U_$E(PRPCNAME,1,3)_U) Q "Application context has not been created!"
"RTN","ZZTDP",180,0)
 ;XQCS allows all users access to the XUS SIGNON context.
"RTN","ZZTDP",181,0)
 ;Also to any context in the XUCOMMAND menu.
"RTN","ZZTDP",182,0)
 ;
"RTN","ZZTDP",183,0)
 I $G(PCONTEXT)="" Q "Application context has not been created!"
"RTN","ZZTDP",184,0)
 ;
"RTN","ZZTDP",185,0)
 S X=$$CHK^XQCS(PUSER,PCONTEXT,PRPCNAME)         ;do the check
"RTN","ZZTDP",186,0)
 S:'X RESULT=X
"RTN","ZZTDP",187,0)
 Q RESULT
"RTN","ZZTDP",188,0)
 ;
"RTN","ZZTDP",189,0)
LOGIN(ACCESSCODE,VERIFYCODE) ;
"RTN","ZZTDP",190,0)
 ;
"RTN","ZZTDP",191,0)
 K (ACCESSCODE,VERIFYCODE)
"RTN","ZZTDP",192,0)
 N %,ACCVER,DILOCKTM,DPNAME,DISYS,%DT,DT,DTIME,DUZ,%H
"RTN","ZZTDP",193,0)
 N CHECKRES,%I,I,IO,IOF,IOM,ION,IOS,IOSL,IOST,IOT,J,OK,PERSONDUZ,PERSONNAME
"RTN","ZZTDP",194,0)
 N POP,RESULTS,SUPERVISOR,TERMREASON,U,USER,V4WVCC,V4WCVMSG
"RTN","ZZTDP",195,0)
 N X,XOPT,XPARSYS,XQVOL,XQXFLG,XUCI,XUDEV,XUENV,XUEOFF,XUEON
"RTN","ZZTDP",196,0)
 N XUF,XUFAC,XUIOP,XUVOL,XWBSTATE,XWBTIME,Y
"RTN","ZZTDP",197,0)
 ;
"RTN","ZZTDP",198,0)
 S ACCESSCODE=$g(ACCESSCODE) I ACCESSCODE="" q "Missing Access Code"
"RTN","ZZTDP",199,0)
 S VERIFYCODE=$g(VERIFYCODE) I VERIFYCODE="" q "Missing Verify Code"
"RTN","ZZTDP",200,0)
 ;
"RTN","ZZTDP",201,0)
 K RESULTS
"RTN","ZZTDP",202,0)
 S U="^" D NOW^%DTC S DT=X
"RTN","ZZTDP",203,0)
 S (IO,IO(0),IOF,IOM,ION,IOS,IOSL,IOST,IOT)="",POP=0
"RTN","ZZTDP",204,0)
 S ACCVER=ACCESSCODE_";"_VERIFYCODE
"RTN","ZZTDP",205,0)
 S ACCVER=$$ENCRYP^XUSRB1(ACCVER)
"RTN","ZZTDP",206,0)
 D SETUP^XUSRB()
"RTN","ZZTDP",207,0)
 D VALIDAV^XUSRB(.USER,ACCVER)
"RTN","ZZTDP",208,0)
 S PERSONDUZ=USER(0)
"RTN","ZZTDP",209,0)
 ;
"RTN","ZZTDP",210,0)
 ;KBAZ/ZAG - add logic to check if verify code needs to be changed.
"RTN","ZZTDP",211,0)
 ;0 = VC does not need to be changed
"RTN","ZZTDP",212,0)
 ;1 = VC needs to be changed
"RTN","ZZTDP",213,0)
 S V4WVCC=$g(USER(2))
"RTN","ZZTDP",214,0)
 S V4WCVMSG=$g(USER(3)) ;sign in message
"RTN","ZZTDP",215,0)
 ;
"RTN","ZZTDP",216,0)
 S TERMREASON=""
"RTN","ZZTDP",217,0)
 I 'PERSONDUZ,$G(DUZ) S TERMREASON=": "_$$GET1^DIQ(200,DUZ_",",9.4) ;Termination reason
"RTN","ZZTDP",218,0)
 I 'PERSONDUZ QUIT USER(3)_TERMREASON
"RTN","ZZTDP",219,0)
 ;
"RTN","ZZTDP",220,0)
 S PERSONNAME=$p(^VA(200,PERSONDUZ,0),"^")
"RTN","ZZTDP",221,0)
 S DPNAME=$p(PERSONNAME,",",2)_" "_$p(PERSONNAME,",")
"RTN","ZZTDP",222,0)
 S RESULTS("DT")=DT
"RTN","ZZTDP",223,0)
 S RESULTS("DUZ")=PERSONDUZ
"RTN","ZZTDP",224,0)
 S RESULTS("username")=PERSONNAME
"RTN","ZZTDP",225,0)
 S RESULTS("displayName")=DPNAME
"RTN","ZZTDP",226,0)
 S RESULTS("greeting")=$g(USER(7))
"RTN","ZZTDP",227,0)
 K ^CacheTempEWD($J)
"RTN","ZZTDP",228,0)
 M ^CacheTempEWD($J)=RESULTS
"RTN","ZZTDP",229,0)
 ;K ^rob("login") M ^rob("login")=RESULTS
"RTN","ZZTDP",230,0)
 QUIT ""
"RTN","ZZTDP",231,0)
 ;
"RTN","ZZTDP",232,0)
NKO(PTID,TMP)  ;
"RTN","ZZTDP",233,0)
 N RESULT
"RTN","ZZTDP",234,0)
 D FILLVALU(TMP,PTID,"nextOfKin",.21)
"RTN","ZZTDP",235,0)
 D FILLVALU(TMP,PTID,"altNextOfKin",.211)
"RTN","ZZTDP",236,0)
 D FILLVALU(TMP,PTID,"emergencyContact",.33)
"RTN","ZZTDP",237,0)
 D FILLVALU(TMP,PTID,"altEmergencyContact",.331)
"RTN","ZZTDP",238,0)
 Q ""
"RTN","ZZTDP",239,0)
 ;
"RTN","ZZTDP",240,0)
FILLVALU(TMP,PTID,TOP,ITM) ;
"RTN","ZZTDP",241,0)
 N GLOB,NAME,VAL
"RTN","ZZTDP",242,0)
 S GLOB=$G(^DPT(PTID,ITM))
"RTN","ZZTDP",243,0)
 S NAME=$P(GLOB,"^",1)
"RTN","ZZTDP",244,0)
 Q:GLOB=""
"RTN","ZZTDP",245,0)
 Q:NAME=""
"RTN","ZZTDP",246,0)
 S @TMP@(TOP,"name")=NAME
"RTN","ZZTDP",247,0)
 S VAL=$P(GLOB,"^",2) S:VAL]"" @TMP@(TOP,"relation")=VAL
"RTN","ZZTDP",248,0)
 S VAL=$P(GLOB,"^",3) S:VAL]"" @TMP@(TOP,"st1")=VAL
"RTN","ZZTDP",249,0)
 S VAL=$P(GLOB,"^",4) S:VAL]"" @TMP@(TOP,"st2")=VAL
"RTN","ZZTDP",250,0)
 S VAL=$P(GLOB,"^",5) S:VAL]"" @TMP@(TOP,"st3")=VAL
"RTN","ZZTDP",251,0)
 S VAL=$P(GLOB,"^",6) S:VAL]"" @TMP@(TOP,"city")=VAL
"RTN","ZZTDP",252,0)
 S VAL=$P(GLOB,"^",7) I VAL]"" D
"RTN","ZZTDP",253,0)
 . N STATE
"RTN","ZZTDP",254,0)
 . S STATE=$P($G(^DIC(5,VAL,0)),"^",2)
"RTN","ZZTDP",255,0)
 . S:STATE]"" @TMP@(TOP,"state")=STATE
"RTN","ZZTDP",256,0)
 S VAL=$P(GLOB,"^",8) S:VAL]"" @TMP@(TOP,"zip")=VAL
"RTN","ZZTDP",257,0)
 S VAL=$P(GLOB,"^",9) S:VAL]"" @TMP@(TOP,"phone")=VAL
"RTN","ZZTDP",258,0)
 S VAL=$P(GLOB,"^",11) S:VAL]"" @TMP@(TOP,"workPhone")=VAL
"RTN","ZZTDP",259,0)
 S VAL=$P(GLOB,"^",10) S:VAL]"" @TMP@(TOP,"sameAsNKO")=VAL
"RTN","ZZTDP",260,0)
 Q
"RTN","ZZTDP",261,0)
 ;
"RTN","ZZTDP",262,0)
USERKEYS(UID,KEYS) ;
"RTN","ZZTDP",263,0)
 Q:$G(KEYS)="" ""
"RTN","ZZTDP",264,0)
 N KEY,VAL,I
"RTN","ZZTDP",265,0)
 S KEY=$P(KEYS,"^",1)
"RTN","ZZTDP",266,0)
 S VAL=''$D(^XUSEC(KEY,UID))
"RTN","ZZTDP",267,0)
 F I=2:1:$L(KEYS,"^") D
"RTN","ZZTDP",268,0)
 . S KEY=$P(KEYS,"^",I)
"RTN","ZZTDP",269,0)
 . S VAL=VAL_"^"_''$D(^XUSEC(KEY,UID))
"RTN","ZZTDP",270,0)
 Q VAL
"RTN","ZZTDP",271,0)
 ;
"RTN","ZZTDP",272,0)
ADMINFO(DFN) ;
"RTN","ZZTDP",273,0)
 Q:$G(DFN)="" ""
"RTN","ZZTDP",274,0)
 N VAINDT,VA200
"RTN","ZZTDP",275,0)
 S VA200=1
"RTN","ZZTDP",276,0)
 D INP^VADPT
"RTN","ZZTDP",277,0)
 Q:'$D(VAIN) ""
"RTN","ZZTDP",278,0)
 N PROV,ATTPROV,DX,HASD
"RTN","ZZTDP",279,0)
 S HASD=0
"RTN","ZZTDP",280,0)
 S:$G(VAIN(2))]"" PROV=$P(VAIN(2),"^",2),HASD=1
"RTN","ZZTDP",281,0)
 S:$G(VAIN(11))]"" ATTPROV=$P(VAIN(11),"^",2),HASD=1
"RTN","ZZTDP",282,0)
 S:$G(VAIN(9))]"" DX=VAIN(9),HASD=1
"RTN","ZZTDP",283,0)
 Q:HASD PROV_"^"_ATTPROV_"^"_DX
"RTN","ZZTDP",284,0)
 Q ""
"RTN","ZZTDP",285,0)
 ;
"RTN","ZZTDP",286,0)
HXFACTOR(DFN,START,STOP) ;
"RTN","ZZTDP",287,0)
 K ^TMP($J,"HX_FACTORS")
"RTN","ZZTDP",288,0)
 N HF,DATE,ID,NDX
"RTN","ZZTDP",289,0)
 Q:$G(DFN)="" "0^Invalid patient id."
"RTN","ZZTDP",290,0)
 S:$G(START)="" START=0
"RTN","ZZTDP",291,0)
 S:$G(STOP)="" STOP=$$DT^XLFDT+1
"RTN","ZZTDP",292,0)
 S NDX=0
"RTN","ZZTDP",293,0)
 ;
"RTN","ZZTDP",294,0)
 S HF=0 F  S HF=$O(^PXRMINDX(9000010.23,"PI",DFN,HF)) Q:HF<1  D
"RTN","ZZTDP",295,0)
 . S DATE=0 F  S DATE=$O(^PXRMINDX(9000010.23,"PI",DFN,HF,DATE)) Q:DATE<1  D
"RTN","ZZTDP",296,0)
 .. Q:DATE<START  Q:DATE>STOP
"RTN","ZZTDP",297,0)
 .. S ID=0 F  S ID=$O(^PXRMINDX(9000010.23,"PI",DFN,HF,DATE,ID)) Q:ID<1  D
"RTN","ZZTDP",298,0)
 ... S ^TMP($J,"HX_FACTORS",NDX,"id")=HF
"RTN","ZZTDP",299,0)
 ... S ^TMP($J,"HX_FACTORS",NDX,"name")=$$EXTERNAL^DILFD(9000010.23,.01,,HF)
"RTN","ZZTDP",300,0)
 ... S ^TMP($J,"HX_FACTORS",NDX,"date")=DATE
"RTN","ZZTDP",301,0)
 ... N DATA,SEV,COMMENTS
"RTN","ZZTDP",302,0)
 ... S DATA=^AUPNVHF(ID,0)
"RTN","ZZTDP",303,0)
 ... S SEVERITY=$P(DATA,"^",4)
"RTN","ZZTDP",304,0)
 ... S COMMENTS=$G(^AUPNVHF(ID,811))
"RTN","ZZTDP",305,0)
 ... S:SEVERITY]"" ^TMP($J,"HX_FACTORS",NDX,"severity")=SEVERITY
"RTN","ZZTDP",306,0)
 ... S:COMMENTS]"" ^TMP($J,"HX_FACTORS",NDX,"comments")=COMMENTS
"RTN","ZZTDP",307,0)
 ... S NDX=NDX+1
"RTN","ZZTDP",308,0)
 Q 1
"RTN","ZZTDP",309,0)
 ;
"RTN","ZZTDP",310,0)
POSTING(IEN) ;
"RTN","ZZTDP",311,0)
 Q:$G(IEN)="" "0^Invalid posting id."
"RTN","ZZTDP",312,0)
 K ^TMP($J,"POSTING",IEN)
"RTN","ZZTDP",313,0)
 N TIUREC,TIUI,TIUARR,TIUL
"RTN","ZZTDP",314,0)
 D INQUIRE^TIUSRVR2(IEN,.TIUREC,0)
"RTN","ZZTDP",315,0)
 S TIUI=0,TIUL=0
"RTN","ZZTDP",316,0)
 F  S TIUI=$O(^TIU(8925,IEN,"TEXT",TIUI)) Q:+TIUI'>0  D
"RTN","ZZTDP",317,0)
 . S TIUARR(TIUL)=$G(^TIU(8925,IEN,"TEXT",+TIUI,0))
"RTN","ZZTDP",318,0)
 . S TIUL=TIUL+1
"RTN","ZZTDP",319,0)
 M ^TMP($J,"POSTING",IEN,"text")=TIUARR
"RTN","ZZTDP",320,0)
 S:$D(TIUREC(8925,IEN,.01)) ^TMP($J,"POSTING",IEN,"type")=TIUREC(8925,IEN,.01)
"RTN","ZZTDP",321,0)
 S:$D(TIUREC(8925,IEN,.05)) ^TMP($J,"POSTING",IEN,"status")=TIUREC(8925,IEN,.05)
"RTN","ZZTDP",322,0)
 S:$D(TIUREC(8925,IEN,.09)) ^TMP($J,"POSTING",IEN,"urgency")=TIUREC(8925,IEN,.09)
"RTN","ZZTDP",323,0)
 S:$D(TIUREC(8925,IEN,1201)) ^TMP($J,"POSTING",IEN,"entryDate")=TIUREC(8925,IEN,1201)
"RTN","ZZTDP",324,0)
 S:$D(TIUREC(8925,IEN,1202)) ^TMP($J,"POSTING",IEN,"author")=TIUREC(8925,IEN,1202)
"RTN","ZZTDP",325,0)
 S:$D(TIUREC(8925,IEN,1301)) ^TMP($J,"POSTING",IEN,"referenceDate")=TIUREC(8925,IEN,1301)
"RTN","ZZTDP",326,0)
 S:$D(TIUREC(8925,IEN,1501)) ^TMP($J,"POSTING",IEN,"signedDate")=TIUREC(8925,IEN,1501)
"RTN","ZZTDP",327,0)
 S:$D(TIUREC(8925,IEN,1502)) ^TMP($J,"POSTING",IEN,"signedBy")=TIUREC(8925,IEN,1502)
"RTN","ZZTDP",328,0)
 Q 1
"RTN","ZZTDP",329,0)
 ;
"RTN","ZZTDP",330,0)
BOILPLTS(DFN,TEXT) ;
"RTN","ZZTDP",331,0)
 Q $$BOIL^TIUSRVD(TEXT,1)
"RTN","ZZTDP",332,0)
 ;
"VER")
8.0^22.0
**END**
**END**
