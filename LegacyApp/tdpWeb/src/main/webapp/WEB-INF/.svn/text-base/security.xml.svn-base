<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"  
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">

    <http lowercase-comparisons="false" entry-point-ref="tdpAuthenticationEntryPoint" session-fixation-protection="newSession">
        <!--intercept-url pattern="/images/*" filters="none"/>
        <intercept-url pattern="/styles/*" filters="none"/>
        <intercept-url pattern="/scripts/*" filters="none"/-->
        <intercept-url pattern="/admin/*" access="ROLE_ADMIN"/>
        <intercept-url pattern="/passwordHint.html*" access="ROLE_ANONYMOUS,ROLE_ADMIN,ROLE_USER"/>
        <intercept-url pattern="/defintions.html*" access="ROLE_ANONYMOUS,ROLE_ADMIN,ROLE_USER"/>
        <intercept-url pattern="/public/*.html*" access="ROLE_ANONYMOUS,ROLE_ADMIN,ROLE_USER"/>
        <!-- APF-737, OK to remove line below if you're not using JSF -->
        <intercept-url pattern="/**/*.html*" access="ROLE_ADMIN,ROLE_USER"/>
        <!-- <form-login login-page="/login.jsp" authentication-failure-url="/login.jsp?error=true" login-processing-url="/j_security_check"/> -->
        <!-- Probably won't need this function since multiple nurses will be sharing workstations
        <remember-me user-service-ref="userDao" key="e37f4b31-0c45-11dd-bd0b-0800200c9a66"/>  -->
        <remember-me/>
    </http>

<!--     <authentication-provider user-service-ref="userDao">
        <password-encoder ref="passwordEncoder"/>
    </authentication-provider> -->
	<authentication-manager alias="authenticationManager"/>
	    
	<!--Cutom login filter which replaces the default AUTHENTICATION_PROCESSING_FILTER -->
	<beans:bean id="customizedFormLoginFilter" class="org.springframework.security.ui.webapp.AuthenticationProcessingFilter" >
		<custom-filter position="AUTHENTICATION_PROCESSING_FILTER"/><!--replace the default one-->
		<beans:property name="defaultTargetUrl" value="/mainMenu.html"/><!--After a successful login, the user will be taken to this page-->
		<beans:property name="authenticationFailureUrl" value="/login.jsp?error=true" /><!--Authentication failed? take him to error page-->
		<beans:property name="authenticationManager" ref="tdpAuthenticationManager"/> <!--Here it is the custom authenticationManager, login magic goes here -->
		<beans:property name="allowSessionCreation" value="true" /> <!--Allow the application to create sessions-->
	</beans:bean>
	
	<!--My custom auth manager-->
	<beans:bean id="tdpAuthenticationManager" class="gov.med.va.innovations.service.CustomAuthenticationManager" >
	    <beans:property name="userManager" ref="userManager" />
	    <beans:property name="roleManager" ref="roleManager" />
        <beans:property name="vistaManager" ref="vistaManager" />
	</beans:bean>
	
	<!-- Automatically receives AuthenticationEvent messages -->
	<beans:bean id="loggerListener" class="org.springframework.security.event.authentication.LoggerListener"/>
	
	<!--Tdp authentication entry point, can be replaced easily if we are doing custom commence of invalid auths.-->
	<beans:bean id="tdpAuthenticationEntryPoint"
			class="gov.med.va.innovations.service.CustomAuthenticationEntryPoint" >
		<beans:property name="loginFormUrl" value="/login.jsp"/>
	</beans:bean>

    <!-- Override the default password-encoder (SHA) by uncommenting the following and changing the class -->
    <!-- <bean id="passwordEncoder" class="org.springframework.security.providers.encoding.ShaPasswordEncoder"/> -->

    <global-method-security>
        <protect-pointcut expression="execution(* *..service.UserManager.getUsers(..))" access="ROLE_ADMIN"/>
        <protect-pointcut expression="execution(* *..service.UserManager.removeUser(..))" access="ROLE_ADMIN"/>
    </global-method-security>
</beans:beans>
